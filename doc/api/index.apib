FORMAT: 1A
# Performance Review API
API Documentation for Performance Review App.  
This application enable adminstrator to assign employees to review each other.


# Group Authentication
Provide authentication functions for employees or admin

## Authenticate User [/authenticate]
Authenticate given email and password

### Authenticate User [POST]


+ Request success (application/json)

    + Headers

            Accept: application/json
            Host: example.org

    + Body

            {
              "email": "rev.leslie.mosciski@company.com",
              "password": "sup3r_s3cr3t_p4ssword"
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 400
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1001,
                "full_name": "Rev. Leslie Mosciski",
                "email": "rev.leslie.mosciski@company.com",
                "gender": "male",
                "department": "Sales",
                "phone_number": "1-731-789-3811 x148",
                "address": "Suite 192 69016 Marla Haven, North Leda, OK 10388",
                "is_admin": false,
                "created_at": "2021-03-13T08:53:16.815Z",
                "updated_at": "2021-03-13T08:53:16.815Z",
                "exp": "2021-03-14T15:53:16.815+07:00"
              },
              "meta": {
                "token": "123abcfoobar"
              }
            }

+ Request unauthorized (application/json)

    + Headers

            Accept: application/json
            Host: example.org

    + Body

            {
              "email": "exie_weissnat@company.com",
              "password": "sup3r_s3cr3t_p4ssword"
            }

+ Response 401 (application/json)

    + Headers

            Content-Length: 26
            X-Content-Type-Options: nosniff

    + Body

            {
              "message": "Unauthorized"
            }

## Change password [/change-password]
Change password of authenticated user with given `new_password`

### Change password [PATCH]


+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "password": "sup3r_s3cr3t_p4ssword",
              "new_password": "4n0th3r_s3cr3t"
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 383
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1003,
                "full_name": "Albert Schultz",
                "email": "schultz.albert@company.com",
                "gender": "male",
                "department": "Government",
                "phone_number": "921.675.5127",
                "address": "363 Walter Freeway, Lake Tonja, NM 76599-4892",
                "is_admin": false,
                "created_at": "2021-03-13T08:53:17.155Z",
                "updated_at": "2021-03-13T08:53:17.155Z",
                "exp": "2021-03-14T15:53:17.155+07:00"
              },
              "meta": {
                "token": "123abcfoobar"
              }
            }

+ Request unauthorized (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "password": "sup3r_s3cr3t_p4ssword",
              "new_password": "4n0th3r_s3cr3t"
            }

+ Response 401 (application/json)

    + Headers

            Content-Length: 26
            X-Content-Type-Options: nosniff

    + Body

            {
              "message": "Unauthorized"
            }

# Group Assignments
Provide functions to manage `Assignment` resources.

## Assignment Resource [/assignments]
Provide functions to create and retrieve review assignments that assigned by an Administrator.

### Create assignment [POST]
Create a new assignment for specified employee as reviewer to review another employee

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "reviewer_id": 1006,
              "reviewee_id": 1007
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 382
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1008,
                "reviewer_id": 1006,
                "reviewee_id": 1007,
                "creator_id": 1005,
                "created_at": "2021-03-13T08:53:17.804Z",
                "updated_at": "2021-03-13T08:53:17.804Z",
                "reviewer": {
                  "id": 1006,
                  "full_name": "Rob Legros",
                  "department": "Education"
                },
                "reviewee": {
                  "id": 1007,
                  "full_name": "Gavin Lebsack",
                  "department": "Mining"
                },
                "creator": {
                  "id": 1005,
                  "full_name": "Mckenzie Runte II",
                  "department": "Technology"
                }
              }
            }

+ Request reviewer not found (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "reviewer_id": 1010,
              "reviewee_id": 1011
            }

+ Response 404 (application/json)

    + Headers

            Content-Length: 38
            X-Content-Type-Options: nosniff

    + Body

            {
              "message": "Reviewer cannot be found"
            }

+ Request reviewee not found (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "reviewer_id": 1014,
              "reviewee_id": 1015
            }

+ Response 404 (application/json)

    + Headers

            Content-Length: 38
            X-Content-Type-Options: nosniff

    + Body

            {
              "message": "Reviewee cannot be found"
            }

### Get assignments [GET]
Get list of assigned review by admin.  
It will return all assignments of every employee if authenticated user is an Administrator


+ Parameters
  + offset (optional, integer) - The offset of nth record that will be fetched first
      + Default: `0`
  + limit (optional, integer) - The maximum number of data that will be returned
      + Default: `10`

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

+ Response 200 (application/json)

    + Headers

            Content-Length: 430
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": [
                {
                  "id": 1020,
                  "reviewer_id": 1018,
                  "reviewee_id": 1019,
                  "creator_id": 1017,
                  "created_at": "2021-03-13T08:53:19.242Z",
                  "updated_at": "2021-03-13T08:53:19.242Z",
                  "reviewer": {
                    "id": 1018,
                    "full_name": "Odilia Kozey",
                    "department": "Farming"
                  },
                  "reviewee": {
                    "id": 1019,
                    "full_name": "Malissa Pacocha",
                    "department": "Healthcare"
                  },
                  "creator": {
                    "id": 1017,
                    "full_name": "Demetrius Mayert",
                    "department": "Consulting"
                  }
                }
              ],
              "meta": {
                "offset": 0,
                "limit": 10,
                "total": 1
              }
            }

# Group Employees
Provide functions to manage `Employee` resources.

## Employee Resource [/employees]
Provide functions to create and retrieve employee information.

### Create employee [POST]
Register a new employe

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "full_name": "Mr. Rupert McLaughlin",
              "email": "mr.mclaughlin.rupert@company.com",
              "gender": "female",
              "department": "Real-Estate",
              "phone_number": "1-875-964-9937 x1274",
              "address": "23820 Rice Tunnel, Port Kimberely, WA 75300"
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 377
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1022,
                "full_name": "Mr. Rupert McLaughlin",
                "email": "mr.mclaughlin.rupert@company.com",
                "gender": "female",
                "department": "Real-Estate",
                "phone_number": "1-875-964-9937 x1274",
                "address": "23820 Rice Tunnel, Port Kimberely, WA 75300",
                "is_admin": false,
                "created_at": "2021-03-13T08:53:19.561Z",
                "updated_at": "2021-03-13T08:53:19.561Z"
              },
              "meta": {
                "password": "123_s3cr3t_p4ssw0rd"
              }
            }

+ Request bad request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
            }

+ Response 400 (application/json)

    + Headers

            Content-Length: 328
            X-Content-Type-Options: nosniff

    + Body

            {
              "message": "Validation failed: Full name can't be blank, Department can't be blank, Phone number can't be blank, Address can't be blank, Email can't be blank",
              "errors": {
                "full_name": [
                  {
                    "error": "blank"
                  }
                ],
                "department": [
                  {
                    "error": "blank"
                  }
                ],
                "phone_number": [
                  {
                    "error": "blank"
                  }
                ],
                "address": [
                  {
                    "error": "blank"
                  }
                ],
                "email": [
                  {
                    "error": "blank"
                  }
                ]
              }
            }

### Get employees [GET]
Get list of employees

+ Parameters
  + offset (optional, integer) - The offset of nth record that will be fetched first
      + Default: `0`
  + limit (optional, integer) - The maximum number of data that will be returned
      + Default: `10`

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

+ Response 200 (application/json)

    + Headers

            Content-Length: 364
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": [
                {
                  "id": 1025,
                  "full_name": "Sung Walker",
                  "email": "sung_walker@company.com",
                  "gender": "female",
                  "department": "Marketing",
                  "phone_number": "(643) 620-0341 x7595",
                  "address": "2846 Kautzer Key, North Spencerfurt, SC 27475-5597",
                  "is_admin": false,
                  "created_at": "2021-03-13T08:53:20.206Z",
                  "updated_at": "2021-03-13T08:53:20.206Z"
                }
              ],
              "meta": {
                "offset": 0,
                "limit": 10,
                "total": 1
              }
            }

## Employee Detail [/employees/{employee_id}]
Provide functions to manipulate employee information.

### Update employee [PATCH]
Update a employee that match with given id

+ Parameters
  + employee_id (required, integer) - The id of employee that will be modified

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "full_name": "Tanner Brakus",
              "email": "tanner.brakus@company.com",
              "gender": "female",
              "department": "Design",
              "phone_number": "390.805.4159",
              "address": "81467 Pfeffer Extensions, Shanahanview, MD 49268"
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 312
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1027,
                "full_name": "Tanner Brakus",
                "email": "tanner.brakus@company.com",
                "gender": "female",
                "department": "Design",
                "phone_number": "390.805.4159",
                "address": "81467 Pfeffer Extensions, Shanahanview, MD 49268",
                "is_admin": false,
                "created_at": "2021-03-13T08:53:20.525Z",
                "updated_at": "2021-03-13T08:53:20.525Z"
              }
            }

# Group Questions
Provide functions to manage `Question` resources.

## Question Resource [/questions]
Provide functions to create and retrieve feedback questions that need to be answered by employees.

### Create question [POST]
Create a new feedback question with given description

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "description": "What did this person do well?"
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 164
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1029,
                "description": "What did this person do well?",
                "created_at": "2021-03-13T08:53:20.693Z",
                "updated_at": "2021-03-13T08:53:20.693Z",
                "deleted_at": null
              }
            }

+ Request bad request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "description": null
            }

+ Response 400 (application/json)

    + Headers

            Content-Length: 104
            X-Content-Type-Options: nosniff

    + Body

            {
              "message": "Validation failed: Description can't be blank",
              "errors": {
                "description": [
                  {
                    "error": "blank"
                  }
                ]
              }
            }

### Get questions [GET]
Get list of questions

+ Parameters
  + offset (optional, integer) - The offset of nth record that will be fetched first
      + Default: `0`
  + limit (optional, integer) - The maximum number of data that will be returned
      + Default: `10`

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

+ Response 200 (application/json)

    + Headers

            Content-Length: 207
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": [
                {
                  "id": 1032,
                  "description": "What did this person do well?",
                  "created_at": "2021-03-13T08:53:21.017Z",
                  "updated_at": "2021-03-13T08:53:21.017Z",
                  "deleted_at": null
                }
              ],
              "meta": {
                "offset": 0,
                "limit": 10,
                "total": 1
              }
            }

## Question Detail [/questions/{question_id}]
Provide functions to manipulate feedback questions that need to be answered by assigned employees.

### Update question [PATCH]
Update a question that match with given id

+ Parameters
  + question_id (required, integer) - The id of question that will be modified

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "description": "What did this person do well?"
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 164
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1034,
                "description": "What did this person do well?",
                "created_at": "2021-03-13T08:53:21.181Z",
                "updated_at": "2021-03-13T08:53:21.181Z",
                "deleted_at": null
              }
            }

### Delete question [DELETE]
Delete a question that match with given id

+ Parameters
  + question_id (required, integer) - The id of question that will be deleted

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 164
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": {
                "id": 1036,
                "description": "What did this person do well?",
                "created_at": "2021-03-13T08:53:21.344Z",
                "updated_at": "2021-03-13T08:53:21.344Z",
                "deleted_at": null
              }
            }

# Group Reviews
Provide functions to manage `Review` resources.

## Review Resource [/assignments/{assignment_id}/reviews]
Provide functions to post and retrieve feedback reviews that employees submitted.

### Create reviews [POST]
Post new review feedbacks for given set of questions

+ Parameters
  + assignment_id (required, integer) - The id of assignment that will be done

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "answers": [
                {
                  "question_id": 1,
                  "answer": "Neque deserunt quo. Deleniti consequatur necessitatibus. Ut fugit assumenda.Suscipit minus sunt. Aperiam harum ullam. Consequatur ipsum nihil."
                },
                {
                  "question_id": 2,
                  "answer": "Voluptas labore aspernatur. Dolor omnis molestiae. Voluptatum recusandae officiis.Quis nemo sed. Optio suscipit vitae. Vero aut non."
                }
              ]
            }

+ Response 200 (application/json)

    + Headers

            Content-Length: 750
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": [
                {
                  "id": 1042,
                  "assignment_id": null,
                  "question_id": 1041,
                  "answer": "Neque deserunt quo. Deleniti consequatur necessitatibus. Ut fugit assumenda.Suscipit minus sunt. Aperiam harum ullam. Consequatur ipsum nihil.",
                  "created_at": "2021-03-13T08:53:21.987Z",
                  "updated_at": "2021-03-13T08:53:21.987Z",
                  "question": {
                    "id": 1041,
                    "description": "What did this person do well?"
                  }
                },
                {
                  "id": 1044,
                  "assignment_id": null,
                  "question_id": 1043,
                  "answer": "Voluptas labore aspernatur. Dolor omnis molestiae. Voluptatum recusandae officiis.Quis nemo sed. Optio suscipit vitae. Vero aut non.",
                  "created_at": "2021-03-13T08:53:21.988Z",
                  "updated_at": "2021-03-13T08:53:21.988Z",
                  "question": {
                    "id": 1043,
                    "description": "What did this person do well?"
                  }
                }
              ],
              "meta": {
                "offset": 0,
                "limit": 2,
                "total": 2
              }
            }

+ Request bad request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

    + Body

            {
              "answers": [
                {
                  "question_id": 1,
                  "answer": "Corrupti ea atque. Facilis nobis odit. Libero quaerat atque.Consectetur officiis et. Qui nemo doloremque. Officiis consequuntur enim."
                },
                {
                  "foo": "bar",
                  "fizz": "buzz"
                }
              ]
            }

+ Response 400 (application/json)

    + Headers

            Content-Length: 215
            X-Content-Type-Options: nosniff

    + Body

            {
              "message": "Validation failed: Answers is invalid",
              "errors": {
                "answers": [
                  {
                    "error": "invalid",
                    "details": [
                      [
            
                      ],
                      [
                        {
                          "question_id": {
                            "error": "blank"
                          }
                        },
                        {
                          "question_id": {
                            "error": "not_a_number"
                          }
                        },
                        {
                          "answer": {
                            "error": "blank"
                          }
                        }
                      ]
                    ]
                  }
                ]
              }
            }

### Get reviews [GET]
Get list of submitted review.  
Administrator will be able to see reviews that submitted by any employees.


+ Parameters
  + offset (optional, integer) - The offset of nth record that will be fetched first
      + Default: `0`
  + limit (optional, integer) - The maximum number of data that will be returned
      + Default: `10`

+ Request success (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 123_sup3r_s3cr3t_t0k3n
            Host: example.org

+ Response 200 (application/json)

    + Headers

            Content-Length: 688
            X-Content-Type-Options: nosniff

    + Body

            {
              "data": [
                {
                  "id": 1060,
                  "assignment_id": null,
                  "question_id": 1059,
                  "answer": "Excepturi facilis dicta. Et aut ut. Quis nostrum quasi.Animi ut reprehenderit. Animi velit praesentium. Sed adipisci suscipit.",
                  "created_at": "2021-03-13T08:53:23.271Z",
                  "updated_at": "2021-03-13T08:53:23.271Z",
                  "question": {
                    "id": 1059,
                    "description": "What did this person do well?"
                  }
                },
                {
                  "id": 1062,
                  "assignment_id": null,
                  "question_id": 1061,
                  "answer": "Sit inventore et. Nulla consectetur occaecati. Et eos magni.Illo magni sapiente. Accusamus culpa aliquam. Impedit nemo veniam.",
                  "created_at": "2021-03-13T08:53:23.272Z",
                  "updated_at": "2021-03-13T08:53:23.272Z",
                  "question": {
                    "id": 1061,
                    "description": "What did this person do well?"
                  }
                }
              ]
            }
